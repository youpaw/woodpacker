//
// Created by youpaw on 21/08/2021.
//

#ifndef PACK_ELF64_H
#define PACK_ELF64_H

#include "pack_exec.h"
#include <unistd.h>

#define DECRYPT_WOODY_ELF64 "\xEB\x25\x66\x0F\x70\xD2\xFF\xC5\xE1\x73\xF9\x04" \
"\x66\x0F\xEF\xCB\xC5\xE1\x73\xF9\x04\x66\x0F\xEF\xCB\xC5\xE1\x73\xF9\x04\x66" \
"\x0F\xEF\xCB\x66\x0F\xEF\xCA\xC3\x49\xBA\xEF\xBE\xAD\xDE\xEF\xBE\xAD\xDE\x49" \
"\xB9\xEF\xBE\xAD\xDE\xEF\xBE\xAD\xDE\x49\xB8\xEF\xBE\xAD\xDE\xEF\xBE\xAD\xDE" \
"\x66\x49\x0F\x6E\xC9\x66\x49\x0F\x6E\xD0\x0F\x16\xCA\x48\x8D\x3D\xA7\xFF\xFF" \
"\xFF\x4D\x89\xD3\x49\xF7\xDB\x4C\x01\xDF\xB8\x0A\x00\x00\x00\x4C\x89\xD6\xBA" \
"\x07\x00\x00\x00\x0F\x05\x48\x89\xFE\x4C\x89\xD2\xF3\x0F\x6F\xC1\x66\x0F\x3A" \
"\xDF\xD1\x01\xE8\x7C\xFF\xFF\xFF\xF3\x0F\x6F\xE1\x66\x0F\x3A\xDF\xD1\x02\xE8" \
"\x6D\xFF\xFF\xFF\xF3\x0F\x6F\xE9\x66\x0F\x3A\xDF\xD1\x04\xE8\x5E\xFF\xFF\xFF" \
"\xF3\x0F\x6F\xF1\x66\x0F\x3A\xDF\xD1\x08\xE8\x4F\xFF\xFF\xFF\xF3\x0F\x6F\xF9" \
"\x66\x0F\x3A\xDF\xD1\x10\xE8\x40\xFF\xFF\xFF\xF3\x44\x0F\x6F\xC1\x66\x0F\x3A" \
"\xDF\xD1\x20\xE8\x30\xFF\xFF\xFF\xF3\x44\x0F\x6F\xC9\x66\x0F\x3A\xDF\xD1\x40" \
"\xE8\x20\xFF\xFF\xFF\xF3\x44\x0F\x6F\xD1\x66\x0F\x3A\xDF\xD1\x80\xE8\x10\xFF" \
"\xFF\xFF\xF3\x44\x0F\x6F\xD9\x66\x0F\x3A\xDF\xD1\x1B\xE8\x00\xFF\xFF\xFF\xF3" \
"\x44\x0F\x6F\xE1\x66\x0F\x3A\xDF\xD1\x36\xE8\xF0\xFE\xFF\xFF\xF3\x44\x0F\x6F" \
"\xE9\x66\x0F\x38\xDB\xE4\x66\x0F\x38\xDB\xED\x66\x0F\x38\xDB\xF6\x66\x0F\x38" \
"\xDB\xFF\x66\x45\x0F\x38\xDB\xC0\x66\x45\x0F\x38\xDB\xC9\x66\x45\x0F\x38\xDB" \
"\xD2\x66\x45\x0F\x38\xDB\xDB\x66\x45\x0F\x38\xDB\xE4\x48\x31\xFF\x48\x39\xFA" \
"\x7E\x53\xF3\x44\x0F\x6F\x3C\x3E\x66\x45\x0F\xEF\xFD\x66\x45\x0F\x38\xDE\xFC" \
"\x66\x45\x0F\x38\xDE\xFB\x66\x45\x0F\x38\xDE\xFA\x66\x45\x0F\x38\xDE\xF9\x66" \
"\x45\x0F\x38\xDE\xF8\x66\x44\x0F\x38\xDE\xFF\x66\x44\x0F\x38\xDE\xFE\x66\x44" \
"\x0F\x38\xDE\xFD\x66\x44\x0F\x38\xDE\xFC\x66\x44\x0F\x38\xDF\xF8\xF3\x44\x0F" \
"\x7F\x3C\x3E\x48\x83\xC7\x10\xEB\xA8\x48\x31\xC0\x48\x31\xFF\x48\x31\xF6\x48" \
"\x31\xD2\x48\x31\xC9\x4D\x31\xC0\x4D\x31\xC9"
#define DECRYPT_WOODY_SIZE_ELF64 441

#define PRINT_WOODY_ELF64	"\xE8\x0E\x00\x00\x00\x2E\x2E\x2E\x2E\x57\x4F\x4F" \
"\x44\x59\x2E\x2E\x2E\x2E\x0A\xB8\x01\x00\x00\x00\xBF\x01\x00\x00\x00\x5E\xBA" \
"\x0E\x00\x00\x00\x0F\x05\x48\x31\xC0\x48\x31\xFF\x48\x31\xD2\x48\x31\xF6\xE9" \
"\x00\x00\x00\x00\x00\x00\x00\x00\x00\xC3"
#define PRINT_WOODY_SIZE_ELF64 60

#define PAYLOAD_ELF64 DECRYPT_WOODY_ELF64 PRINT_WOODY_ELF64
#define PAYLOAD_SIZE_ELF64 (DECRYPT_WOODY_SIZE_ELF64 + PRINT_WOODY_SIZE_ELF64)

#define SEG_LENGTH_OFF_ELF64 41
#define KEY_PART1_OFF_ELF64 51
#define KEY_PART2_OFF_ELF64 61
#define JMP_ADDR_OFF_ELF64 (DECRYPT_WOODY_SIZE_ELF64 + 50)

t_data_wrap *pack_elf64(const t_exec_map *exec, const t_data_wrap *key);
t_cave_info	*find_cave_elf64(const void *bin);
void		assemble_woody_elf64(t_data_wrap *woody, t_cave_info *cave_info,
								 const t_data_wrap *key);

#endif //PACK_ELF64_H
